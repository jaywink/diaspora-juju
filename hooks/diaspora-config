#!/bin/bash

set -e

# check some configs
if [[ -z `config-get hostname` ]]; then
    juju-log "Hostname needs to be specified in charm config. Silently exiting."
    exit 0
fi

juju-log "Setting configuration"
cd /home/diaspora/diaspora

# a file is needed even if we don't use it
if [[ ! -e /home/diaspora/diaspora/config/diaspora.yml ]]; then
    sudo -u diaspora -H bash -c "cp config/diaspora.yml.example config/diaspora.yml"
fi

cat <<EOF > /home/diaspora/.diaspora_config
export RAILS_ENV=production
export DB=postgres
export ENVIRONMENT_URL='https://`config-get hostname`'
export ENVIRONMENT_CERTIFICATE_AUTHORITIES='/etc/ssl/certs/ca-certificates.crt'
export ENVIRONMENT_SIDEKIQ_CONCURRENCY=`config-get sidekiq_concurrency`
export SERVER_RAILS_ENVIRONMENT='production'
export SERVER_LISTEN='0.0.0.0:3000'
export SETTINGS_POD_NAME='`config-get podname`'
export MAIL_ENABLE=true
export MAIL_SENDER_ADDRESS='no-reply@`config-get hostname`'
EOF

if [[ `config-get mail_type` == 'smtp' ]]; then
    echo "export MAIL_METHOD=smtp"  >> /home/diaspora/.diaspora_config
    echo "export MAIL_SMTP_HOST='`config-get mail_smtp_host`'"  >> /home/diaspora/.diaspora_config
    echo "export MAIL_SMTP_PORT=`config-get mail_smtp_port`"  >> /home/diaspora/.diaspora_config
    echo "export MAIL_SMTP_AUTHENTICATION='`config-get mail_smtp_authentication`'"  >> /home/diaspora/.diaspora_config
    echo "export MAIL_SMTP_USERNAME='`config-get mail_smtp_username`'"  >> /home/diaspora/.diaspora_config
    echo "export MAIL_SMTP_PASSWORD='`config-get mail_smtp_password`'"  >> /home/diaspora/.diaspora_config
    if [[ -z `config-get mail_smtp_domain` ]]; then
        echo "export MAIL_SMTP_DOMAIN='`config-get hostname`'"  >> /home/diaspora/.diaspora_config
    else
        echo "export MAIL_SMTP_DOMAIN='`config-get mail_smtp_domain`'"  >> /home/diaspora/.diaspora_config
    fi
else
    echo "export MAIL_METHOD=sendmail"  >> /home/diaspora/.diaspora_config
fi

if [[ `config-get enable_registrations` == 'True' ]]; then
    echo "export SETTINGS_ENABLE_REGISTRATIONS=true"  >> /home/diaspora/.diaspora_config
else
    echo "export SETTINGS_ENABLE_REGISTRATIONS=false"  >> /home/diaspora/.diaspora_config
fi

if [[ `config-get logging_debug` == 'True' ]]; then
    echo "export ENVIRONMENT_SIDEKIQ_BACKTRACE=false"  >> /home/diaspora/.diaspora_config
fi

if [[ `config-get statistics` == 'True' ]]; then
    echo "export PRIVACY_STATISTICS_USER_COUNTS=true"  >> /home/diaspora/.diaspora_config
    echo "export PRIVACY_STATISTICS_POST_COUNTS=true"  >> /home/diaspora/.diaspora_config
    echo "export PRIVACY_STATISTICS_COMMENT_COUNTS=true"  >> /home/diaspora/.diaspora_config
fi

if [[ ! -z `config-get bitcoin_address` ]]; then
    echo "export SETTINGS_BITCOIN_ADDRESS='`config-get bitcoin_address`'" >> /home/diaspora/.diaspora_config
fi

if [[ ! -z `config-get facebook_app_id` ]]; then
    echo "export SERVICES_FACEBOOK_ENABLE=true" >> /home/diaspora/.diaspora_config
    echo "export SERVICES_FACEBOOK_APP_ID='`config-get facebook_app_id`'" >> /home/diaspora/.diaspora_config
    echo "export SERVICES_FACEBOOK_SECRET='`config-get facebook_app_secret`'" >> /home/diaspora/.diaspora_config
    echo "export SERVICES_FACEBOOK_AUTHORIZED='`config-get facebook_authorized`'" >> /home/diaspora/.diaspora_config
fi

if [[ ! -z `config-get twitter_key` ]]; then
    echo "export SERVICES_TWITTER_ENABLE=true" >> /home/diaspora/.diaspora_config
    echo "export SERVICES_TWITTER_KEY='`config-get twitter_key`'" >> /home/diaspora/.diaspora_config
    echo "export SERVICES_TWITTER_SECRET='`config-get twitter_secret`'" >> /home/diaspora/.diaspora_config
fi

if [[ ! -z `config-get tumblr_key` ]]; then
    echo "export SERVICES_TUMBLR_ENABLE=true" >> /home/diaspora/.diaspora_config
    echo "export SERVICES_TUMBLR_KEY='`config-get tumblr_key`'" >> /home/diaspora/.diaspora_config
    echo "export SERVICES_TUMBLR_SECRET='`config-get tumblr_secret`'" >> /home/diaspora/.diaspora_config
fi

if [[ ! -z `config-get admin_account` ]]; then
    echo "export ADMINS_ACCOUNT='`config-get admin_account`'" >> /home/diaspora/.diaspora_config
fi
if [[ ! -z `config-get admin_email` ]]; then
    echo "export ADMINS_PODMIN_EMAIL='`config-get admin_email`'" >> /home/diaspora/.diaspora_config
fi

if [[ `config-get terms` == 'True' ]]; then
    echo "export SETTINGS_TERMS_ENABLE=true"  >> /home/diaspora/.diaspora_config
    if [[ ! -z `config-get terms_jurisdiction` ]]; then
        echo "export SETTINGS_TERMS_JURISDICTION='`config-get terms_jurisdiction`'" >> /home/diaspora/.diaspora_config
    fi
    if [[ `config-get terms_agelimit` -gt 0 ]]; then
        echo "export SETTINGS_TERMS_MINIMUM_AGE=`config-get terms_agelimit`" >> /home/diaspora/.diaspora_config
    fi
fi

if [[ `config-get maintenance_remove_old_users` == 'True' ]]; then
    echo "export SETTINGS_MAINTENANCE_REMOVE_OLD_USERS_ENABLE=true" >> /home/diaspora/.diaspora_config
fi

if [[ `config-get verbose_curl_debug` == 'True' ]]; then
    echo "export SETTINGS_TYPHOEUS_VERBOSE=true" >> /home/diaspora/.diaspora_config
fi

if [[ `config-get relay_outbound` == 'True' ]]; then
    echo "export RELAY_OUTBOUND_SEND=true" >> /home/diaspora/.diaspora_config
fi

if [[ `config-get relay_inbound` == 'True' ]]; then
    echo "export RELAY_INBOUND_SUBSCRIBE=true" >> /home/diaspora/.diaspora_config
    echo "export RELAY_INBOUND_SCOPE=all" >> /home/diaspora/.diaspora_config
fi

# 'install' config if needed
if [[ `grep -c diaspora_config /home/diaspora/.bash_profile` -eq 0 ]]; then
    echo 'source /home/diaspora/.diaspora_config' >> /home/diaspora/.bash_profile
fi

if [[ ! -e "/home/diaspora/.diaspora-db-setup-done" ]]; then
    juju-log "No database yet. Silently exiting"
    exit 0
fi

# server needs to be restarted to make config relevant
juju-log "DEBUG: context id is $JUJU_CONTEXT_ID"
# TODO: this check does not work yet
if [[ $JUJU_HOOK_NAME != "upgrade-diaspora" ]]; then
    # we only want to run restart if not doing upgrade-diaspora,
    # since otherwise it runs twice
    juju-log "Restarting diaspora*"
    service diaspora restart
    sleep 10
    juju-log "New configuration has been set and service has been restarted."
fi
