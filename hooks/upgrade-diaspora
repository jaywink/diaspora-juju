#!/bin/bash

set -e

function diaspora_command {
    # Run a command in diaspora context
    sudo -u diaspora -H bash -c "source /home/diaspora/.bash_profile && rvm use $DIASPORA_RUBY_VERSION && gem install bundler && $1"
}

# check some configs
if [[ -z `config-get hostname` ]]; then
    juju-log "Hostname needs to be specified in charm config. Silently exiting."
    exit 0
fi

juju-log "Making sure we've got latest rvm"
sudo -u diaspora -H bash -c "source /home/diaspora/.bash_profile && rvm get stable"

if [[ ! -e /home/diaspora/diaspora ]]; then
    juju-log "Check out diaspora source"
    cd /home/diaspora
    sudo -u diaspora -H bash -c "git clone -b `config-get branch` git://github.com/`config-get repository`.git diaspora"
    cd diaspora
fi

cd /home/diaspora/diaspora

if [[ ! -e "/home/diaspora/.db-available" ]]; then
    if [[ ! -e "/home/diaspora/.diaspora-db-setup-done" ]]; then
        juju-log "No database yet. Silently exiting"
        exit 0
    fi
fi

juju-log "Upgrading diaspora source"
if [[ -e "/home/diaspora/.diaspora-db-setup-done" ]]; then
    db_setup_done=yes
fi

# make sure we have the remote - in case config has a new repository
repository=`config-get repository`
if [[ `git remote -v | grep $repository | wc -l` -ne 2 ]]; then
    juju-log "Setting correct repository"
    git remote set-url origin git://github.com/$repository.git
fi

juju-log "Fetching latest source"
sudo -u diaspora -H bash -c "git fetch --all"

juju-log "Making sure correct source is used"
sudo -u diaspora -H bash -c "git reset --hard origin/`config-get branch`"

cd .. && cd diaspora

juju-log "Checking for suitable Ruby and installing if needed"
DIASPORA_RUBY_VERSION=`cat .ruby-version`
apt-get install -y gawk libreadline6-dev libyaml-dev libsqlite3-dev sqlite3 autoconf libgdbm-dev libncurses5-dev automake bison libffi-dev
sudo -u diaspora -H bash -c "source /home/diaspora/.bash_profile && rvm install $DIASPORA_RUBY_VERSION"

juju-log "Launching 'diaspora-config'"
$CHARM_DIR/hooks/diaspora-config

juju-log "Install or upgrade ruby gems"
diaspora_command "bin/bundle install --without test development"

juju-log "Make sure migrate/ path is clean"
sudo -u diaspora -H bash -c "git clean -f db/migrate/"

# make sure logrotate is enabled
# DISABLED atm
#if [[ ! -e "/etc/logrotate.d/diaspora" ]]; then
#    juju-log "Configuring logrotate"
#    sudo -u root -H bash -c "source /home/diaspora/.bash_profile && rvm use $DIASPORA_RUBY_VERSION && bin/rake maintenance:install_logrotate_config"
#fi

if [[ -z $db_setup_done ]]; then
    juju-log "Creating schema"
    diaspora_command "bin/rake db:create db:schema:load"
    touch /home/diaspora/.diaspora-db-setup-done
else
    # we don't want to die if stopping fails
    set +e
    service diaspora stop
    sleep 10
    set -e
    juju-log "Running database migrate"
    diaspora_command "bin/rake db:migrate"
fi

juju-log "Precompiling assets"
diaspora_command "bin/rake tmp:cache:clear assets:precompile"

juju-log "Make the application ports available, now that we know we have a site to expose"
open-port 80
open-port 443

$CHARM_DIR/hooks/start
