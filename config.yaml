options:
  hostname:
    type: string
    description: |
      Pod hostname in the format `domain.tld`. Subdomains are allowed.
      Subfolders are not supported by diaspora* at this moment.
      NOTE! This is *required* and *cannot* be changed after installation.
    default: ""
  repository:
    type: string
    default: diaspora/diaspora
    description: Repository to use. Does not normally need to be changed.
  branch:
    type: string
    default: master
    description: Branch to use. Does not normally need to be changed.
  podname:
    type: string
    default: diaspora*
    description: A name for the pod.
  sidekiq_concurrency:
    type: int
    description: |
      Number of parallel threads Sidekiq uses. Increase this gradually
      if Sidekiq cannot process jobs fast enough. 2 is good for a minimal
      pod. The higher this setting, the more memory Sidekiq will need.
      Warning, do not increase this over 25 without increasing 'pool'
      in config/database.yml!
    default: 2
  logging_debug:
    type: boolean
    description: |
      Enable or disable certain error and debug logging. Keep this disabled
      if you don't need this information or want to run the pod with as little
      memory as possible.
    default: false
  ssl_key:
    type: string
    description: |
      SSL private key for pod domain. See readme how to best use this
      configuration value. Must be unencrypted.
    default: ""
  ssl_cert:
    type: string
    description: |
      SSL cert for pod domain. See readme how to best use this
      configuration value.
    default: ""
  ssl_snakebite:
    type: boolean
    description: |
      If you don't set 'ssl_key' and 'ssl_cert', by default the
      default snakebite self-signed certifications will be used until a proper
      cert is set. Set this to false once you transfer the cert manually
      to the server.
      Note! diaspora* requires a valid SSL certificate for federation.
      Running a production real diaspora* pod using snakebite certs
      is **not** possible.
    default: true
  statistics:
    type: boolean
    description: |
      Enable statistics from the pod? This includes user and post counts.
      Statistics will be exposed at /statistics.json
    default: false
  enable_registrations:
    type: boolean
    description: Enable new users to create accounts.
    default: true
  mail_type:
    type: string
    description: |
      How emails are sent, options: sendmail or smtp. If smtp, don't forget
      to set mail_smtp_host.
    default: sendmail
  mail_smtp_host:
    type: string
    description: Host for SMTP mail server, if used
    default: ""
  mail_smtp_port:
    type: int
    description: Port for SMTP mail server, if used
    default: 587
  mail_smtp_authentication:
    type: string
    description: |
      Authentication type for SMTP, if used.
      Either 'plain', 'login', 'cram_md5' or 'none'.
    default: plain
  mail_smtp_username:
    type: string
    description: Username for SMTP mail server, if used
    default: ""
  mail_smtp_password:
    type: string
    description: Password for SMTP mail server, if used
    default: ""
  mail_smtp_domain:
    type: string
    description: |
      Sending 'HELO' command domain for SMTP server, if used.
      By default pod domain will be used - otherwise set it here.
    default: ""
  maintenance_remove_old_users:
    type: boolean
    description: |
      Remove old inactive users automatically in the background.
      This happens after 2 years of inactivity. A warning will be
      sent to the account and if the user doesn't log in within 30
      days, the account will automatically be deleted.
    default: true
  bitcoin_address:
    type: string
    description: Bitcoin address for donations.
    default: ""
  facebook_app_id:
    type: string
    description: Facebook app id for services integration.
    default: ""
  facebook_app_secret:
    type: string
    description: Facebook app secret if ID given.
    default: ""
  facebook_authorized:
    type: string
    description: Facebook authorized users scope (0.5.1.x ->)
    default: "false"
  twitter_key:
    type: string
    description: Twitter key for services integration.
    default: ""
  twitter_secret:
    type: string
    description: Twitter secret if key given.
    default: ""
  tumblr_key:
    type: string
    description: Tumblr key for services integration.
    default: ""
  tumblr_secret:
    type: string
    description: Tumblr secret if ID given.
    default: ""
  admin_account:
    type: string
    description: "Once created, set admin account username here."
    default: ""
  admin_email:
    type: string
    description: |
      Set pod administrator email here. This will also be visible in the
      terms and privacy policy pages, if enabled.
    default: ""
  terms:
    type: boolean
    description: |
      Enable Terms of Service?
      A default ToS document will be shown to users wanting to create
      accounts.
    default: false
  terms_jurisdiction:
    type: string
    description: |
      If you enable a ToS, you should define what jurisdiction is
      used to handle legal disputes. For example, state/country or
      country, depending on your location.
    default: ""
  terms_agelimit:
    type: int
    description: |
      Set a positive number to activate this setting. This age limit is shown
      in the default ToS document.
    default: 0
  verbose_curl_debug:
    type: boolean
    description: |
      Enable verbose curl debug logging.
    default: false
  relay_outbound:
    type: boolean
    description: |
      Push out public posts to a relay.
    default: true
  relay_inbound:
    type: boolean
    description: |
      Subscribe to relay posts.
    default: true
  backup_sources:
    type: string
    default: '["/tmp/files"]'
    description: List of folder to backup, in json format.
  backup_destination:
    type: string
    default: "backup"
    description: Remote folder where to store the backups.
  backup_schedule:
    type: string
    default: "daily"
  backup_passphrase:
    type: string
    default: "passphrase"
    description: PGP passphrase duplicity will use to encrypt the backup.
  backup_strategy:
    type: string
    default: "full"
    description: Duplicity supports either "full" or "incremental" backup strategy.
  pre_backup_script_path:
    type: string
    default: "/usr/local/sbin/pre_backup.sh"
    description: Path to the script to run before starting the backup.
  post_backup_script_path:
    type: string
    default: "/usr/local/sbin/post_backup.sh"
    description: Path to the script to run after starting the backup.
  pre_restore_script_path:
    type: string
    default: "/usr/local/sbin/pre_restore.sh"
    description: Path to the script to run before starting the backup.
  post_restore_script_path:
    type: string
    default: "/usr/local/sbin/post_restore.sh"
    description: Path to the script to run after starting the backup.
  backup_backend:
    type: string
    default: "swift"
    description: At the moment "swift", "u1" and "s3" backends are supported.
  backup_ftp_password:
    type: string
    default: ""
    description: OAuth token in the FTP_PASSWORD form used by duplicity.
  backup_aws_access_key_id:
    type: string
    default: ""
  backup_aws_secret_access_key:
    type: string
    default: ""
  backup_swift_username:
    type: string
    default: ""
  backup_swift_password:
    type: string
    default: ""
  backup_swift_url:
    type: string
    default: ""
